def is_safe(graph, colors, vertex, color):
    for neighbor in graph[vertex]:
        if colors[neighbor] == color:
            return False
    return True

def graph_coloring_util(graph, m, colors, vertex):
    if vertex == len(graph):
        return True

    for color in range(1, m + 1):
        if is_safe(graph, colors, vertex, color):
            colors[vertex] = color
            if graph_coloring_util(graph, m, colors, vertex + 1):
                return True
            colors[vertex] = 0

    return False

def graph_coloring(graph, m):
    colors = [0] * len(graph)
    if graph_coloring_util(graph, m, colors, 0):
        return colors
    else:
        return None

graph = [
    [1, 2, 3],
    [0, 2],
    [0, 1, 3],
    [0, 2]
]

m = 3  # Number of colors
colors = graph_coloring(graph, m)
if colors:
    print("Solution exists: ", colors)
else:
    print("No solution exists")
